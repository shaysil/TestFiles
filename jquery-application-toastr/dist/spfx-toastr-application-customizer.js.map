{"version":3,"sources":["webpack:///../webpack/bootstrap 7601e3c168d0d0138f76","webpack:///../../../../src/extensions/spfxToastr/SpfxToastrApplicationCustomizer.ts","webpack:///../external \"@microsoft/decorators\"","webpack:///../external \"@microsoft/sp-core-library\"","webpack:///../external \"@microsoft/sp-application-base\"","webpack:///../external \"SpfxToastrApplicationCustomizerStrings\"","webpack:///../external \"@microsoft/sp-loader\"","webpack:///../external \"jquery\"","webpack:///../external \"toastr\"","webpack:///../../../../src/extensions/spfxToastr/SpfxToastr.module.scss.ts","webpack:///.././lib/extensions/spfxToastr/SpfxToastr.module.css?b63c","webpack:///.././lib/extensions/spfxToastr/SpfxToastr.module.css","webpack:///.././node_modules/css-loader/lib/css-base.js","webpack:///../../src/index.ts","webpack:///../(webpack)/buildin/global.js","webpack:///../../../../src/services/toastService/ToastService.ts","webpack:///../external \"@microsoft/sp-http\""],"names":[],"mappings":"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","file":"spfx-toastr-application-customizer.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7601e3c168d0d0138f76","import { override } from '@microsoft/decorators';\nimport { Log } from '@microsoft/sp-core-library';\nimport {\n  BaseApplicationCustomizer\n} from '@microsoft/sp-application-base';\n\nimport * as strings from 'SpfxToastrApplicationCustomizerStrings';\n\n//Needed to reference external CSS files\nimport { SPComponentLoader } from '@microsoft/sp-loader';\n\nimport * as $ from 'jquery';\nimport * as toastr from 'toastr';\nimport styles from './SpfxToastr.module.scss';\n//import { IToast, ToastService } from '../../services/toastService'; //loaded from the toastService barrel - temporarily disabled due to issue with WebPack\nimport { IToast } from '../../services/toastService/IToast';\nimport { ToastService } from '../../services/toastService/ToastService';\n\nconst LOG_SOURCE: string = 'SpfxToastrApplicationCustomizer';\n\n/**\n * If your command set uses the ClientSideComponentProperties JSON input,\n * it will be deserialized into the BaseExtension.properties object.\n * You can define an interface to describe it.\n */\nexport interface ISpfxToastrApplicationCustomizerProperties {\n  //Nope\n}\n\n/** A Custom Action which can be run during execution of a Client Side Application */\nexport default class SpfxToastrApplicationCustomizer\n  extends BaseApplicationCustomizer<ISpfxToastrApplicationCustomizerProperties> {\n\n  private toastsPromise: Promise<IToast[]>;\n\n  @override\n  public onInit(): Promise<void> {\n    Log.info(LOG_SOURCE, `Initialized ${strings.Title}`);\n    \n    //Load the Toastr CSS\n    SPComponentLoader.loadCss('https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css');\n\n    //Go ahead and request the toasts, but we can't use them until jQuery and Toastr are ready\n    this.toastsPromise = ToastService.getToasts(this.context.spHttpClient, this.context.pageContext.web.absoluteUrl, this.context.pageContext.web.id);\n\n   \n    //jQuery document ready\n    $(document).ready(() => {\n\n      //***********************\n      //Toastr Options\n      //***********************\n\n      //Determines where the toast shows up.\n      // styles.topRight and styles.topLeft take into account the SuiteBar\n      // there are also the native toast-bottom-right and toast-bottom-left\n      toastr.options.positionClass = `${styles.topRight} ${styles.spfxToastr}`;\n      toastr.options.preventDuplicates = true;\n      toastr.options.newestOnTop = false; //Ensures the first toast we send is on top\n      toastr.options.timeOut = 0; //Prevents auto dismissal\n      toastr.options.extendedTimeOut = 0; //Prevents auto dismissal during hover\n      toastr.options.tapToDismiss = true; //Allows messages to go away on click\n      toastr.options.closeButton = true; //Shows a close button to let end users know to click to close\n\n      //A combination of Office UI-Fabric classes and custom classes are used\n      // to ensure the notifications don't look too out of place\n      //We use a custom styles.fabricIcon style to imitage the ms-Icon class\n      // the ms-Icon class has extra properties that mess up our toast\n      //We are unable to use the ms-bgColor styles since the Toast CSS loads\n      // later and takes precedence, so we use our own color classes\n      // For more background on this issue, see this article: https://dev.office.com/sharepoint/docs/spfx/web-parts/guidance/office-ui-fabric-integration\n      toastr.options.titleClass = 'ms-font-m ms-fontWeight-semibold';\n      toastr.options.messageClass = 'ms-font-s';\n      toastr.options.iconClasses = {\n        info: `${styles.info} ${styles.fabricIcon} ms-Icon--Info`,\n        warning: `${styles.warning} ${styles.fabricIcon} ms-Icon--Warning`,\n        error: `${styles.error} ${styles.fabricIcon} ms-Icon--Error`,\n        success: `${styles.success} ${styles.fabricIcon} ms-Icon--Completed`\n      };\n\n\n      //***********************\n      //Toast Display\n      //***********************\n\n      this.toastsPromise.then((toasts: IToast[]) => {\n        for (let t of toasts){\n          //Setup callbacks to track dismisal status\n          let overrides: ToastrOptions = {\n            onclick: () => {\n              ToastService.acknowledgeToast(t.Id, this.context.pageContext.web.id);\n            },\n            onCloseClick: () => {\n              ToastService.acknowledgeToast(t.Id, this.context.pageContext.web.id);\n            }\n          };\n\n          switch (t.Severity){\n            case 'Warning':\n              toastr.warning(t.Message, t.Title, overrides);\n              break;\n            case 'Error':\n              toastr.error(t.Message, t.Title, overrides);\n              break;\n            case 'Success':\n              toastr.success(t.Message, t.Title, overrides);\n              break;\n            default:\n              toastr.info(t.Message, t.Title, overrides);\n              break;\n          }\n        }\n      }).catch((error: any): void => {\n        //Generic error handler for any issues that occurred throughout\n        // the promise chain. Display it in a toast!\n        toastr.error(error, strings.FailedToLoad);\n      });\n    });\n    \n    return Promise.resolve<void>();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../src/extensions/spfxToastr/SpfxToastrApplicationCustomizer.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@microsoft/decorators\"\n// module id = 1\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@microsoft/sp-core-library\"\n// module id = 2\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@microsoft/sp-application-base\"\n// module id = 3\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"SpfxToastrApplicationCustomizerStrings\"\n// module id = 4\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@microsoft/sp-loader\"\n// module id = 5\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jquery\"\n// module id = 6\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"toastr\"\n// module id = 7\n// module chunks = 0","/* tslint:disable */\r\nrequire('./SpfxToastr.module.css');\r\nconst styles = {\r\n  topRight: 'topRight_6608c0ab',\r\n  topLeft: 'topLeft_6608c0ab',\r\n  spfxToastr: 'spfxToastr_6608c0ab',\r\n  fabricIcon: 'fabricIcon_6608c0ab',\r\n  info: 'info_6608c0ab',\r\n  warning: 'warning_6608c0ab',\r\n  error: 'error_6608c0ab',\r\n  success: 'success_6608c0ab',\r\n};\r\n\r\nexport default styles;\r\n/* tslint:enable */\n\n\n// WEBPACK FOOTER //\n// ../../../src/extensions/spfxToastr/SpfxToastr.module.scss.ts","var content = require(\"!!../../../node_modules/css-loader/index.js??ref--0-1!./SpfxToastr.module.css\");\nvar loader = require(\"E:\\\\spdev-testing\\\\Ready\\\\jquery-application-toastr\\\\node_modules\\\\@microsoft\\\\load-themed-styles\\\\lib\\\\index.js\");\n\nif(typeof content === \"string\") content = [[module.id, content]];\n\n// add the styles to the DOM\nfor (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);\n\nif(content.locals) module.exports = content.locals;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/extensions/spfxToastr/SpfxToastr.module.css\n// module id = 9\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".topRight_6608c0ab{top:62px;right:12px}.topLeft_6608c0ab{top:62px;left:12px}.spfxToastr_6608c0ab .fabricIcon_6608c0ab:before{position:fixed;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;speak:none;font-size:28px;margin:4px 0 0 -36px;-webkit-font-smoothing:antialiased}.spfxToastr_6608c0ab .info_6608c0ab{background-color:\\\"[theme:blue, default:#0078d7]\\\"}.spfxToastr_6608c0ab .warning_6608c0ab{background-color:\\\"[theme:orangeLighter, default:#ff8c00]\\\"}.spfxToastr_6608c0ab .error_6608c0ab{background-color:\\\"[theme:redDark, default:#a80000]\\\"}.spfxToastr_6608c0ab .success_6608c0ab{background-color:\\\"[theme:green, default:#107c10]\\\"}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"minimize\":true}!./lib/extensions/spfxToastr/SpfxToastr.module.css\n// module id = 10\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader/lib/css-base.js\n// module id = 11\n// module chunks = 0","/**\r\n * An IThemingInstruction can specify a rawString to be preserved or a theme slot and a default value\r\n * to use if that slot is not specified by the theme.\r\n */\r\n\r\n// Declaring a global here in case that the execution environment is Node.js (without importing the\r\n// entire node.js d.ts for now)\r\ndeclare var global: any; // tslint:disable-line:no-any\r\n\r\nexport interface IThemingInstruction {\r\n  theme?: string;\r\n  defaultValue?: string;\r\n  rawString?: string;\r\n}\r\n\r\nexport type ThemableArray = Array<IThemingInstruction>;\r\n\r\nexport interface ITheme {\r\n  [key: string]: string;\r\n}\r\n\r\ninterface IStyleSheet {\r\n  cssText: string;\r\n}\r\n\r\ninterface IExtendedHtmlStyleElement extends HTMLStyleElement {\r\n  styleSheet: IStyleSheet;\r\n}\r\n\r\n/**\r\n * Performance Measurement of loading styles\r\n */\r\ninterface IMeasurement {\r\n  /**\r\n   * Count of style element injected, which is the slow operation in IE\r\n   */\r\n  count: number;\r\n  /**\r\n   * Total duration of all loadStyles exections\r\n   */\r\n  duration: number;\r\n}\r\n\r\ninterface IRunState {\r\n  mode: Mode;\r\n  buffer: ThemableArray[];\r\n  flushTimer: number;\r\n}\r\n\r\ninterface IThemeState {\r\n  theme: ITheme | undefined;\r\n  lastStyleElement: IExtendedHtmlStyleElement;\r\n  registeredStyles: IStyleRecord[];  // records of already registered non-themable styles\r\n  registeredThemableStyles: IStyleRecord[];  // records of already registered themable styles\r\n  loadStyles: ((processedStyles: string, rawStyles?: string | ThemableArray) => void) | undefined;\r\n  perf: IMeasurement;\r\n  runState: IRunState;\r\n}\r\n\r\ninterface IStyleRecord {\r\n  styleElement: Element;\r\n  themableStyle: ThemableArray;\r\n}\r\n\r\n/**\r\n * object returned from resolveThemableArray function\r\n * @styleString:  this string is the processed styles in string\r\n * @themable:     this boolean indicates if this style array is themable\r\n */\r\ninterface IThemableArrayResolveResult {\r\n  styleString: string;\r\n  themable: boolean;\r\n}\r\n\r\n/**\r\n * In sync mode, styles are registered as style elements synchronously with loadStyles() call.\r\n * In async mode, styles are buffered and registered as batch in async timer for performance purpose.\r\n */\r\nexport const enum Mode {\r\n  sync,\r\n  async\r\n}\r\n\r\n/**\r\n * Themable styles and non-themable styles are tracked separately\r\n * Specify ClearStyleOptions when calling clearStyles API to specify which group of registered styles should be cleared.\r\n * @onlyThemable: only themable styles will be cleared\r\n * @onlyNonThemable: only non-themable styles will be cleared\r\n * @all: both themable and non-themable styles will be cleared\r\n */\r\nexport const enum ClearStyleOptions {\r\n  onlyThemable = 1,\r\n  onlyNonThemable = 2,\r\n  all = 3\r\n}\r\n\r\n// IE needs to inject styles using cssText. However, we need to evaluate this lazily, so this\r\n// value will initialize as undefined, and later will be set once on first loadStyles injection.\r\nlet _injectStylesWithCssText: boolean;\r\n\r\n// Store the theming state in __themeState__ global scope for reuse in the case of duplicate\r\n// load-themed-styles hosted on the page.\r\nconst _root: any = (typeof window === 'undefined') ? global : window; // tslint:disable-line:no-any\r\n\r\nconst _themeState: IThemeState = initializeThemeState();\r\n\r\n/**\r\n * Matches theming tokens. For example, \"[theme: themeSlotName, default: #FFF]\" (including the quotes).\r\n */\r\n// tslint:disable-next-line:max-line-length\r\nconst _themeTokenRegex: RegExp = /[\\'\\\"]\\[theme:\\s*(\\w+)\\s*(?:\\,\\s*default:\\s*([\\\\\"\\']?[\\.\\,\\(\\)\\#\\-\\s\\w]*[\\.\\,\\(\\)\\#\\-\\w][\\\"\\']?))?\\s*\\][\\'\\\"]/g;\r\n\r\n/** Maximum style text length, for supporting IE style restrictions. */\r\nconst MAX_STYLE_CONTENT_SIZE: number = 10000;\r\n\r\nconst now: () => number =\r\n  () => (typeof performance !== 'undefined' && !!performance.now) ? performance.now() : Date.now();\r\n\r\nfunction measure(func: () => void): void {\r\n  const start: number = now();\r\n  func();\r\n  const end: number = now();\r\n  _themeState.perf.duration += end - start;\r\n}\r\n\r\n/**\r\n * initialize global state object\r\n */\r\nfunction initializeThemeState(): IThemeState {\r\n  let state: IThemeState = _root.__themeState__ || {\r\n    theme: undefined,\r\n    lastStyleElement: undefined,\r\n    registeredStyles: []\r\n  };\r\n\r\n  if (!state.runState) {\r\n    state = {\r\n      ...(state),\r\n      perf: {\r\n        count: 0,\r\n        duration: 0\r\n      },\r\n      runState: {\r\n        flushTimer: 0,\r\n        mode: Mode.sync,\r\n        buffer: []\r\n      }\r\n    };\r\n  }\r\n  if (!state.registeredThemableStyles) {\r\n    state = {\r\n      ...(state),\r\n      registeredThemableStyles: []\r\n    };\r\n  }\r\n  _root.__themeState__ = state;\r\n  return state;\r\n}\r\n\r\n/**\r\n * Loads a set of style text. If it is registered too early, we will register it when the window.load\r\n * event is fired.\r\n * @param {string | ThemableArray} styles Themable style text to register.\r\n * @param {boolean} loadAsync When true, always load styles in async mode, irrespective of current sync mode.\r\n */\r\nexport function loadStyles(styles: string | ThemableArray, loadAsync: boolean = false): void {\r\n  measure(() => {\r\n    const styleParts: ThemableArray = Array.isArray(styles) ? styles : splitStyles(styles);\r\n    if (_injectStylesWithCssText === undefined) {\r\n      _injectStylesWithCssText = shouldUseCssText();\r\n    }\r\n    const {\r\n      mode,\r\n      buffer,\r\n      flushTimer\r\n    } = _themeState.runState;\r\n    if (loadAsync || mode === Mode.async) {\r\n      buffer.push(styleParts);\r\n      if (!flushTimer) {\r\n        _themeState.runState.flushTimer = asyncLoadStyles();\r\n      }\r\n    } else {\r\n      applyThemableStyles(styleParts);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Allows for customizable loadStyles logic. e.g. for server side rendering application\r\n * @param {(processedStyles: string, rawStyles?: string | ThemableArray) => void}\r\n * a loadStyles callback that gets called when styles are loaded or reloaded\r\n */\r\nexport function configureLoadStyles(\r\n  loadStylesFn: ((processedStyles: string, rawStyles?: string | ThemableArray) => void) | undefined\r\n): void {\r\n  _themeState.loadStyles = loadStylesFn;\r\n}\r\n\r\n/**\r\n * Configure run mode of load-themable-styles\r\n * @param mode load-themable-styles run mode, async or sync\r\n */\r\nexport function configureRunMode(mode: Mode): void {\r\n  _themeState.runState.mode = mode;\r\n}\r\n\r\n/**\r\n * external code can call flush to synchronously force processing of currently buffered styles\r\n */\r\nexport function flush(): void {\r\n  measure(() => {\r\n    const styleArrays: ThemableArray[] = _themeState.runState.buffer.slice();\r\n    _themeState.runState.buffer = [];\r\n    const mergedStyleArray: ThemableArray = [].concat.apply([], styleArrays);\r\n    if (mergedStyleArray.length > 0) {\r\n      applyThemableStyles(mergedStyleArray);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * register async loadStyles\r\n */\r\nfunction asyncLoadStyles(): number {\r\n  return setTimeout(() => {\r\n    _themeState.runState.flushTimer = 0;\r\n    flush();\r\n  }, 0);\r\n}\r\n\r\n/**\r\n * Loads a set of style text. If it is registered too early, we will register it when the window.load event\r\n * is fired.\r\n * @param {string} styleText Style to register.\r\n * @param {IStyleRecord} styleRecord Existing style record to re-apply.\r\n */\r\nfunction applyThemableStyles(stylesArray: ThemableArray, styleRecord?: IStyleRecord): void {\r\n  if (_themeState.loadStyles) {\r\n    _themeState.loadStyles(resolveThemableArray(stylesArray).styleString, stylesArray);\r\n  } else {\r\n    _injectStylesWithCssText ?\r\n      registerStylesIE(stylesArray, styleRecord) :\r\n      registerStyles(stylesArray);\r\n  }\r\n}\r\n\r\n/**\r\n * Registers a set theme tokens to find and replace. If styles were already registered, they will be\r\n * replaced.\r\n * @param {theme} theme JSON object of theme tokens to values.\r\n */\r\nexport function loadTheme(theme: ITheme | undefined): void {\r\n  _themeState.theme = theme;\r\n\r\n  // reload styles.\r\n  reloadStyles();\r\n}\r\n\r\n/**\r\n * Clear already registered style elements and style records in theme_State object\r\n * @option: specify which group of registered styles should be cleared.\r\n * Default to be both themable and non-themable styles will be cleared\r\n */\r\nexport function clearStyles(option: ClearStyleOptions = ClearStyleOptions.all): void {\r\n  if (option === ClearStyleOptions.all || option === ClearStyleOptions.onlyNonThemable) {\r\n    clearStylesInternal(_themeState.registeredStyles);\r\n    _themeState.registeredStyles = [];\r\n  }\r\n  if (option === ClearStyleOptions.all || option === ClearStyleOptions.onlyThemable) {\r\n    clearStylesInternal(_themeState.registeredThemableStyles);\r\n    _themeState.registeredThemableStyles = [];\r\n  }\r\n}\r\n\r\nfunction clearStylesInternal(records: IStyleRecord[]): void {\r\n  records.forEach((styleRecord: IStyleRecord) => {\r\n    const styleElement: HTMLStyleElement = styleRecord && styleRecord.styleElement as HTMLStyleElement;\r\n    if (styleElement && styleElement.parentElement) {\r\n      styleElement.parentElement.removeChild(styleElement);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Reloads styles.\r\n */\r\nfunction reloadStyles(): void {\r\n  if (_themeState.theme) {\r\n    const themableStyles: ThemableArray[] = [];\r\n    for (const styleRecord of _themeState.registeredThemableStyles) {\r\n      themableStyles.push(styleRecord.themableStyle);\r\n    }\r\n    if (themableStyles.length > 0) {\r\n      clearStyles(ClearStyleOptions.onlyThemable);\r\n      applyThemableStyles([].concat.apply([], themableStyles));\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Find theme tokens and replaces them with provided theme values.\r\n * @param {string} styles Tokenized styles to fix.\r\n */\r\nexport function detokenize(styles: string | undefined): string | undefined {\r\n  if (styles) {\r\n    styles = resolveThemableArray(splitStyles(styles)).styleString;\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\n/**\r\n * Resolves ThemingInstruction objects in an array and joins the result into a string.\r\n * @param {ThemableArray} splitStyleArray ThemableArray to resolve and join.\r\n */\r\nfunction resolveThemableArray(splitStyleArray: ThemableArray): IThemableArrayResolveResult {\r\n  const { theme }: IThemeState = _themeState;\r\n  let themable: boolean = false;\r\n  // Resolve the array of theming instructions to an array of strings.\r\n  // Then join the array to produce the final CSS string.\r\n  const resolvedArray: (string | undefined)[] = (splitStyleArray || []).map((currentValue: IThemingInstruction) => {\r\n    const themeSlot: string | undefined = currentValue.theme;\r\n    if (themeSlot) {\r\n      themable = true;\r\n      // A theming annotation. Resolve it.\r\n      const themedValue: string | undefined = theme ? theme[themeSlot] : undefined;\r\n      const defaultValue: string = currentValue.defaultValue || 'inherit';\r\n\r\n      // Warn to console if we hit an unthemed value even when themes are provided, but only if \"DEBUG\" is true.\r\n      // Allow the themedValue to be undefined to explicitly request the default value.\r\n      if (theme && !themedValue && console && !(themeSlot in theme) && typeof DEBUG !== 'undefined' && DEBUG) {\r\n        console.warn(`Theming value not provided for \"${themeSlot}\". Falling back to \"${defaultValue}\".`);\r\n      }\r\n\r\n      return themedValue || defaultValue;\r\n    } else {\r\n      // A non-themable string. Preserve it.\r\n      return currentValue.rawString;\r\n    }\r\n  });\r\n\r\n  return {\r\n    styleString: resolvedArray.join(''),\r\n    themable: themable\r\n  };\r\n}\r\n\r\n/**\r\n * Split tokenized CSS into an array of strings and theme specification objects\r\n * @param {string} styles Tokenized styles to split.\r\n */\r\nexport function splitStyles(styles: string): ThemableArray {\r\n  const result: ThemableArray = [];\r\n  if (styles) {\r\n    let pos: number = 0; // Current position in styles.\r\n    let tokenMatch: RegExpExecArray | null; // tslint:disable-line:no-null-keyword\r\n    while (tokenMatch = _themeTokenRegex.exec(styles)) {\r\n      const matchIndex: number = tokenMatch.index;\r\n      if (matchIndex > pos) {\r\n        result.push({\r\n          rawString: styles.substring(pos, matchIndex)\r\n        });\r\n      }\r\n\r\n      result.push({\r\n        theme: tokenMatch[1],\r\n        defaultValue: tokenMatch[2] // May be undefined\r\n      });\r\n\r\n      // index of the first character after the current match\r\n      pos = _themeTokenRegex.lastIndex;\r\n    }\r\n\r\n    // Push the rest of the string after the last match.\r\n    result.push({\r\n      rawString: styles.substring(pos)\r\n    });\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Registers a set of style text. If it is registered too early, we will register it when the\r\n * window.load event is fired.\r\n * @param {ThemableArray} styleArray Array of IThemingInstruction objects to register.\r\n * @param {IStyleRecord} styleRecord May specify a style Element to update.\r\n */\r\nfunction registerStyles(styleArray: ThemableArray): void {\r\n  const head: HTMLHeadElement = document.getElementsByTagName('head')[0];\r\n  const styleElement: HTMLStyleElement = document.createElement('style');\r\n  const {\r\n    styleString,\r\n    themable\r\n  } = resolveThemableArray(styleArray);\r\n\r\n  styleElement.type = 'text/css';\r\n  styleElement.appendChild(document.createTextNode(styleString));\r\n  _themeState.perf.count++;\r\n  head.appendChild(styleElement);\r\n\r\n  const record: IStyleRecord = {\r\n    styleElement: styleElement,\r\n    themableStyle: styleArray\r\n  };\r\n\r\n  if (themable) {\r\n    _themeState.registeredThemableStyles.push(record);\r\n  } else {\r\n    _themeState.registeredStyles.push(record);\r\n  }\r\n}\r\n\r\n/**\r\n * Registers a set of style text, for IE 9 and below, which has a ~30 style element limit so we need\r\n * to register slightly differently.\r\n * @param {ThemableArray} styleArray Array of IThemingInstruction objects to register.\r\n * @param {IStyleRecord} styleRecord May specify a style Element to update.\r\n */\r\nfunction registerStylesIE(styleArray: ThemableArray, styleRecord?: IStyleRecord): void {\r\n  const head: HTMLHeadElement = document.getElementsByTagName('head')[0];\r\n  const registeredStyles: IStyleRecord[] = _themeState.registeredStyles;\r\n  let lastStyleElement: IExtendedHtmlStyleElement = _themeState.lastStyleElement;\r\n\r\n  const stylesheet: IStyleSheet | undefined = lastStyleElement ? lastStyleElement.styleSheet : undefined;\r\n  const lastStyleContent: string = stylesheet ? stylesheet.cssText : '';\r\n  let lastRegisteredStyle: IStyleRecord = registeredStyles[registeredStyles.length - 1];\r\n  const resolvedStyleText: string = resolveThemableArray(styleArray).styleString;\r\n\r\n  if (!lastStyleElement || (lastStyleContent.length + resolvedStyleText.length) > MAX_STYLE_CONTENT_SIZE) {\r\n    lastStyleElement = document.createElement('style') as IExtendedHtmlStyleElement;\r\n    lastStyleElement.type = 'text/css';\r\n\r\n    if (styleRecord) {\r\n      head.replaceChild(lastStyleElement, styleRecord.styleElement);\r\n      styleRecord.styleElement = lastStyleElement;\r\n    } else {\r\n      head.appendChild(lastStyleElement);\r\n    }\r\n\r\n    if (!styleRecord) {\r\n      lastRegisteredStyle = {\r\n        styleElement: lastStyleElement,\r\n        themableStyle: styleArray\r\n      };\r\n      registeredStyles.push(lastRegisteredStyle);\r\n    }\r\n  }\r\n\r\n  lastStyleElement.styleSheet.cssText += detokenize(resolvedStyleText);\r\n  Array.prototype.push.apply(lastRegisteredStyle.themableStyle, styleArray); // concat in-place\r\n\r\n  // Preserve the theme state.\r\n  _themeState.lastStyleElement = lastStyleElement;\r\n}\r\n\r\n/**\r\n * Checks to see if styleSheet exists as a property off of a style element.\r\n * This will determine if style registration should be done via cssText (<= IE9) or not\r\n */\r\nfunction shouldUseCssText(): boolean {\r\n  let useCSSText: boolean = false;\r\n\r\n  if (typeof document !== 'undefined') {\r\n    const emptyStyle: IExtendedHtmlStyleElement = document.createElement('style') as IExtendedHtmlStyleElement;\r\n\r\n    emptyStyle.type = 'text/css';\r\n    useCSSText = !!emptyStyle.styleSheet;\r\n  }\r\n\r\n  return useCSSText;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/index.ts","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 13\n// module chunks = 0","import Guid from '@microsoft/sp-core-library/lib/Guid';\nimport { SPHttpClient, SPHttpClientResponse } from '@microsoft/sp-http';\n\nimport { IToast } from './IToast';\n\ninterface IToastStatus {\n\tId: number;\n\tAck: Date;\n}\n\ninterface IToastCache {\n\tLoaded?: Date;\n\tToasts: IToast[];\n\tToastStatuses: IToastStatus[];\n}\n\n/** Returns items from the Toast list and caches the results */\nexport class ToastService {\n\tprivate static readonly storageKeyBase: string = 'spfxToastr'; //Key used for localStorage\n\tprivate static readonly getFromListAlways: boolean = false; //Useful for testing\n\n\n\t//***********************\n\t//Public Methods\n\t//***********************\n\n\t/** Retrieves toasts that should be displayed for the given user*/\n\tpublic static getToasts(spHttpClient: SPHttpClient, baseUrl: string, webId: Guid): Promise<IToast[]> {\n\t\treturn new Promise<IToast[]>((resolve: (toasts: IToast[]) => void, reject: (error: any) => void): void => {\n\t\t\tthis.ensureToasts(spHttpClient, baseUrl, webId)\n\t\t\t\t.then((toasts: IToast[]): void => {\n\t\t\t\t\tresolve(toasts);\n\t\t\t\t}).catch((error: any): void => {\n\t\t\t\t\treject(error);\n\t\t\t\t});\n\t\t});\n\t}\n\n\t/** Stores the date/time a toast was acknowledged, used to control what shows on the next refresh \n\t * @param {number} id - The list ID of the toast to acknowledge\n\t*/\n\tpublic static acknowledgeToast(id: number, webId: Guid): void {\n\t\tlet cachedData: IToastCache = ToastService.retrieveCache(webId);\n\n\t\t// Check if the status already exists, and if so update it\n\t\t//  otherwise, add a new status for the id\n\t\tlet index: number = ToastService.indexOfToastStatusById(id, cachedData.ToastStatuses);\n\t\tif (index >= 0) {\n\t\t\tcachedData.ToastStatuses[index].Ack = new Date();\n\t\t} else {\n\t\t\tcachedData.ToastStatuses.push({\n\t\t\t\tId: id,\n\t\t\t\tAck: new Date()\n\t\t\t});\n\t\t}\n\t\tToastService.storeCache(cachedData, webId);\n\t}\n\n\t\n\t//***********************\n\t//localStorage Management\n\t//***********************\n\n\tprivate static webStorageKey(webId: Guid): string {\n\t\treturn `${ToastService.storageKeyBase}_${webId}`;\n\t}\n\n\t/** Rehydrates spfxToastr data from localStorage (or creates a new empty set) */\n\tprivate static retrieveCache(webId: Guid): IToastCache {\n\t\t//Pull data from localStorage if available and we previously cached it\n\t\tlet cachedData: IToastCache = localStorage ? JSON.parse(localStorage.getItem(this.webStorageKey(webId))) : undefined;\n\t\tif (cachedData) {\n\t\t\tcachedData.Loaded = new Date(cachedData.Loaded.valueOf()); //Rehydrate date from JSON (serializes to string)\n\t\t} else {\n\t\t\t//Initialize a new, empty object\n\t\t\tcachedData = {\n\t\t\t\tToasts: [],\n\t\t\t\tToastStatuses: []\n\t\t\t};\n\t\t}\n\t\treturn cachedData;\n\t}\n\n\t/** Serializes spfxToastr data into localStorage */\n\tprivate static storeCache(cachedData: IToastCache, webId: Guid): void {\n\t\t//Cache the data in localStorage when possible\n\t\tif (localStorage) {\n\t\t\tlocalStorage.setItem(this.webStorageKey(webId), JSON.stringify(cachedData));\n\t\t}\n\t}\n\n\n\t//***********************\n\t//Toast Retrieval\n\t//***********************\n\n\t/** Retrieves toasts from either the cache or the list depending on the cache's freshness */\n\tprivate static ensureToasts(spHttpClient: SPHttpClient, baseUrl: string, webId: Guid): Promise<IToast[]> {\n\t\treturn new Promise<IToast[]>((resolve: (toasts: IToast[]) => void, reject: (error: any) => void): void => {\n\t\t\t\n\t\t\tlet cachedData: IToastCache = ToastService.retrieveCache(webId);\n\n\t\t\tif(cachedData.Loaded) {\n\t\t\t\t//True Cache found, check if it is stale\n\t\t\t\t// anything older than 2 minutes will be considered stale\n\t\t\t\tlet now: Date = new Date();\n\t\t\t\tlet staleTime: Date = new Date(now.getTime() + -2*60000);\n\n\t\t\t\tif (cachedData.Loaded > staleTime && !ToastService.getFromListAlways) {\n\t\t\t\t\t//console.log('Pulled toasts from localStorage');\n\t\t\t\t\tresolve(ToastService.reduceToasts(cachedData));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((window as any).spfxToastrLoadingData) {\n\t\t\t\t//Toasts are already being loaded! Briefly wait and try again\n\t\t\t\twindow.setTimeout((): void => {\n\t\t\t\t\tToastService.ensureToasts(spHttpClient, baseUrl, webId)\n\t\t\t\t\t\t.then((toasts: IToast[]): void => {\n\t\t\t\t\t\t\tresolve(toasts);\n\t\t\t\t\t\t});\n\t\t\t\t}, 100);\n\t\t\t} else {\n\t\t\t\t//Set a loading flag to prevent multiple data queries from firing\n\t\t\t\t//  this will be important should there be multiple consumers of the service on a single page\n\t\t\t\t(window as any).spfxToastrLoadingData = true;\n\n\t\t\t\t//Toasts need to be loaded, so let's go get them!\n\t\t\t\tToastService.getToastsFromList(spHttpClient, baseUrl)\n\t\t\t\t\t.then((toasts: IToast[]): void => {\n\t\t\t\t\t\t//console.log('Pulled toasts from the list');\n\t\t\t\t\t\tcachedData.Toasts = toasts;\n\t\t\t\t\t\tcachedData.Loaded = new Date(); //Reset the cache timeout\n\t\t\t\t\t\tcachedData = ToastService.processCache(cachedData);\n\n\t\t\t\t\t\t//Update the cache\n\t\t\t\t\t\tToastService.storeCache(cachedData, webId);\n\n\t\t\t\t\t\t//Clear the loading flag\n\t\t\t\t\t\t(window as any).spfxToastrLoadingData = false;\n\n\t\t\t\t\t\t//Give them some toast!\n\t\t\t\t\t\tresolve(ToastService.reduceToasts(cachedData));\n\t\t\t\t\t}).catch((error: any): void => {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t//Breaking up the URL like this isn't necessary, but can be easier to update\n\tprivate static readonly apiEndPoint: string = \"_api/web/lists/getbytitle('Toast')/items\";\n\tprivate static readonly select: string = \"Id,Title,Severity,Frequency,Enabled,Message\";\n\tprivate static readonly orderby: string = \"StartDate asc\";\n\n\t/** Pulls the active toast entries directly from the underlying list */\n\tprivate static getToastsFromList(spHttpClient: SPHttpClient, baseUrl: string): Promise<IToast[]> {\n\t\t//Toasts are only shown during their scheduled window\n\t\tlet now: string = new Date().toISOString();\n\t\tlet filter: string = `(StartDate le datetime'${now}') and (EndDate ge datetime'${now}')`;\n\t\t\n\t\treturn spHttpClient.get(`${baseUrl}/${ToastService.apiEndPoint}?$select=${ToastService.select}&$filter=${filter}&$orderby=${ToastService.orderby}`,SPHttpClient.configurations.v1)\n\t\t\t.then((response: SPHttpClientResponse): Promise<{ value: IToast[] }> => {\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\t//Failed requests don't automatically throw exceptions which\n\t\t\t\t\t// can be problematic for chained promises, so we throw one\n\t\t\t\t\tthrow `Unable to get items: ${response.status} (${response.statusText})`;\n\t\t\t\t}\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then((results: {value: IToast[]}) => {\n\t\t\t\t//Clean up extra properties\n\t\t\t\t// Even when your interface only defines certain properties, SP sends many\n\t\t\t\t// extra properties that you may or may not care about (we don't)\n\t\t\t\t// (this isn't strictly necessary but makes the cache much cleaner)\n\t\t\t\tlet toasts:IToast[] = [];\n\t\t\t\tfor (let v of results.value) {\n\t\t\t\t\ttoasts.push({\n\t\t\t\t\t\tTitle: v.Title,\n\t\t\t\t\t\tId: v.Id,\n\t\t\t\t\t\tSeverity: v.Severity,\n\t\t\t\t\t\tFrequency: v.Frequency,\n\t\t\t\t\t\tEnabled: v.Enabled,\n\t\t\t\t\t\tMessage: v.Message+'<a href=${v.Link}></a>',\n\t\t\t\t\t\tLink:v.Link\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn toasts;\n\t\t\t});\n\t}\n\n\n\t//***********************\n\t//Helper Functions\n\t//***********************\n\n\t/** Helper function to return the index of an IToastStatus object by the Id property */\n\tprivate static indexOfToastStatusById(Id: number, toastStatuses: IToastStatus[]): number {\n\t\tfor (let i: number = 0; i < toastStatuses.length; i++) {\n\t\t\tif (toastStatuses[i].Id == Id) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/** Helper function to clean up the toast statuses by removing old toasts */\n\tprivate static processCache(cachedData: IToastCache): IToastCache {\n\t\t//Setup a temporary array of Ids (makes the filtering easier)\n\t\tlet activeIds: number[] = [];\n\t\tfor (let toast of cachedData.Toasts) {\n\t\t\tactiveIds.push(toast.Id);\n\t\t}\n\n\t\t//only keep the status info for toast that still matter (active)\n\t\tcachedData.ToastStatuses = cachedData.ToastStatuses.filter((value: IToastStatus): boolean => {\n\t\t\treturn activeIds.indexOf(value.Id) >= 0;\n\t\t});\n\n\t\treturn cachedData;\n\t}\n\n\t/** Adjusts the toasts to display based on what the user has already acknowledged and the toast's frequency value*/\n\tprivate static reduceToasts(cachedData: IToastCache): IToast[] {\n\t\treturn cachedData.Toasts.filter((toast: IToast): boolean => {\n\t\t\tif (!toast.Enabled) {\n\t\t\t\t//Disabled toasts are still queried so that their status isn't lost\n\t\t\t\t// however, they shouldn't be displayed\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tlet tsIndex: number = ToastService.indexOfToastStatusById(toast.Id, cachedData.ToastStatuses);\n\t\t\tif (tsIndex >= 0) {\n\t\t\t\tlet lastShown: Date = new Date(cachedData.ToastStatuses[tsIndex].Ack.valueOf()); //Likely needs to be rehyrdated from JSON\n\t\t\t\tswitch (toast.Frequency) {\n\t\t\t\t\tcase 'Once':\n\t\t\t\t\t\t//Already shown\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tcase 'Always':\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t//Default behavior is Once Per Day\n\t\t\t\t\t\tlet now: Date = new Date();\n\t\t\t\t\t\tif (now.getFullYear() !== lastShown.getFullYear()\n\t\t\t\t\t\t\t\t|| now.getMonth() !== lastShown.getMonth()\n\t\t\t\t\t\t\t\t|| now.getDay() !== lastShown.getDay()) {\n\t\t\t\t\t\t\t//Last shown on a different day, so show it!\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//Already shown today\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//No previous status means it needs to be shown\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// ../../../src/services/toastService/ToastService.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_15__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@microsoft/sp-http\"\n// module id = 15\n// module chunks = 0"],"sourceRoot":""}